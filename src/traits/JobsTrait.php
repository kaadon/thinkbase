<?php
declare(strict_types=1);

namespace Kaadon\ThinkBase\traits;

use think\queue\Job;

/**
 *
 */
trait JobsTrait
{

    /**
     * @return bool
     */
    public function doJOb(): bool
    {
        return parent::doJOb(); // TODO: Change the autogenerated stub
    }

    /**
     * @param Job $job
     * @param array $data
     * @return void
     */
    public function fire(Job $job, array $data): void
    {
        parent::fire($job, $data); // TODO: Change the autogenerated stub
    }

    /**
     * @param array $data
     * @param string $task
     * @param int $delay
     * @param string|null $queue
     * @param string|null $JobClass
     * @return bool|string
     */
    public static function Push(array $data, string $task, int $delay = 0, ?string $queue = null, ?string $JobClass = null): bool|string
    {
        if (empty($task) || !method_exists(self::class, $task)) {
            return false;
        }
        if (empty($queue)) {
            $queue = class_basename(self::class . "_" . $task);
        }
        return parent::Push($data, task: $task, delay: $delay, queue: $queue, JobClass: self::class); // TODO: Change the autogenerated stub
    }
}